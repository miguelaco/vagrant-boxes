---

- name: Check consul role
  uri:
    url: "{{ schema }}://{{ vault_service_consul }}:8200/v1/pki_int/roles/consul"
    method: GET
    status_code: 200, 404
    headers:
      X-Vault-Token: "{{ vault_root_token }}"
  register: consul_role_response
  run_once: yes

# curl -XPOST -H "X-Vault-Token: fc6620f7-41a8-cdbb-030e-6a9deb70d819" https://vault.service.consul:8200/v1/pki/roles/consul -d '{"allowed_domains": ["consul"], "allow_subdomains": true}'
- name: Create consul role
  uri:
    url: "{{ schema }}://{{ vault_service_consul }}:8200/v1/pki_int/roles/consul"
    method: POST
    status_code: 200, 204
    headers:
      X-Vault-Token: "{{ vault_root_token }}"
    body_format: json
    body:
      allowed_domains: "{{ consul_domain }}"
      allow_subdomains: yes
  run_once: yes
  when: consul_role_response.status == 404

- name: Check cert serial number file
  local_action: stat path={{ consul_init_dir }}/cert_serial_number
  register: consul_cert_serial_number_result
  run_once: yes
  become: no

- name: Lookup cert serial number file
  set_fact:
    consul_cert_serial_number: "{{ lookup('file', '{{ consul_init_dir }}/cert_serial_number') }}"
  no_log: not debug | default(true)
  when: consul_cert_serial_number_result.stat.exists

- name: Check consul cert
  uri:
    url: "{{ schema }}://{{ vault_service_consul }}:8200/v1/pki_int/cert/{{ consul_cert_serial_number }}"
    method: GET
    status_code: 200, 404
    headers:
      X-Vault-Token: "{{ vault_root_token }}"
  register: consul_cert_response
  run_once: yes
  when: consul_cert_serial_number_result.stat.exists

- block:
  # curl -XPOST -H "X-Vault-Token: fc6620f7-41a8-cdbb-030e-6a9deb70d819" https://vault.service.consul:8200/v1/pki/issue/consul -d '{"common_name": "vault.service.consul", "alt_names": "active.vault.service.consul, standby.vault.service.consul, *.node.consul"}'
  - name: Create consul cert
    uri:
      url: "{{ schema }}://{{ vault_service_consul }}:8200/v1/pki_int/issue/consul"
      method: POST
      status_code: 200, 204
      headers:
        X-Vault-Token: "{{ vault_root_token }}"
      body_format: json
      body:
        common_name: "{{ consul_service_consul }}"
        alt_names: "*.node.{{ consul_domain }}, *.node.{{ consul_datacenter }}.{{ consul_domain }}, server.{{ consul_datacenter }}.{{ consul_domain }}"
        ttl: "21900h"
    run_once: yes
    register: consul_cert
    no_log: not debug | default(true)

  - name: Create consul secrets directory
    file:
      path: "{{ consul_secrets_dir }}"
      state: directory
      owner: consul
      group: consul
      mode: 0700

  - name: Copy consul cert
    copy:
      content: "{{ item.content }}"
      dest: "{{ item.dest }}"
      owner: consul
      group: consul
    no_log: not debug | default(true)
    with_items:
      - { dest: "{{ consul_secrets_dir }}/ca.crt", content: "{{ consul_cert.json.data.ca_chain | last }}" }
      - { dest: "{{ consul_secrets_dir }}/server.cert.pem", content: "{{ ([consul_cert.json.data.certificate] + consul_cert.json.data.ca_chain) | join('\n') }}" }
      - { dest: "{{ consul_secrets_dir }}/server.key.pem", content: "{{ consul_cert.json.data.private_key }}" }
    notify:
      - Start consul service
      - Wait for consul leader election

  - name: Save cert serial number
    local_action:
      copy
      content={{ consul_cert.json.data.serial_number }}
      dest={{ consul_init_dir }}/cert_serial_number
    become: no
    run_once: yes

  - name: Lookup cert serial number file
    set_fact:
      consul_cert_serial_number: "{{ lookup('file', '{{ consul_init_dir }}/cert_serial_number') }}"
    no_log: not debug | default(true)

  - name: Copy consul config file
    template:
      src={{ item.src }}
      dest={{ item.dest }}
      owner=consul
      group=consul
      mode={{ item.mode }}
    with_items:
      - { src: "consul.json.j2", dest: "{{ consul_config_file }}", mode: "0600" }
      - { src: "consul.systemd.j2", dest: "/etc/systemd/system/consul.service", mode: "0644" }
    notify:
      - Start consul service
      - Wait for consul leader election

  when: consul_cert_response is skipped or consul_cert_response.status == 404

- meta: flush_handlers
