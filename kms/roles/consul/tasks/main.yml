---

- name: Set consul as resolver
  import_tasks: dnsmasq.yml

- name: Create consul group
  group: name=consul system=yes

- name: Create consul user
  user:
    name=consul
    group=consul
    system=yes

- name: Create consul home dir
  file:
    path={{ item }}
    state=directory
  with_items:
    - "{{ consul_home }}"
    - "{{ consul_home }}/bin"
    - "{{ consul_config_dir }}"

- name: Reset data
  file:
    path={{ consul_data_dir }}
    state=absent
  when: consul_reset

- name: Create consul data dir
  file:
    path={{ consul_data_dir }}
    state=directory
    owner=consul
    group=consul
    mode=0755

- name: Check consul package
  local_action:
    stat
      path={{ role_path }}/files/consul_{{ consul_version }}_linux_amd64.zip
  become: no
  run_once: yes
  register: consul_package

- name: Download consul package locally
  local_action:
    get_url
      url=https://releases.hashicorp.com/consul/{{ consul_version }}/consul_{{ consul_version }}_linux_amd64.zip
      dest={{ role_path }}/files
      force=no
  become: no
  run_once: yes
  when: not consul_package.stat.exists

- package: name=unzip state=present

- name: Copy consul package to hosts
  unarchive:
    src={{ role_path }}/files/consul_{{ consul_version }}_linux_amd64.zip
    dest={{ consul_home }}/bin
  notify:
    - Start consul service
    - Wait for consul leader election

- name: Check consul_init file
  local_action: stat path={{ consul_init_dir }}
  register: consul_init_file
  run_once: yes
  become: no
  when: not consul_reset

- name: Load consul_init from local
  include_vars: "{{ consul_init_dir }}"
  run_once: yes
  become: no
  when:
    - not consul_reset
    - consul_init_file.stat.exists

- name: Generate encryption key
  command: "{{ consul_home }}/bin/consul keygen"
  register: keygen
  run_once: yes
  when: consul_encrypt is undefined

- name: Set consul_encrypt fact
  set_fact:
    consul_encrypt: "{{ keygen.stdout }}"
  run_once: yes
  when: consul_encrypt is undefined

- name: Save consul_init locally
  local_action:
    template
      src=consul_init.json.j2
      dest={{ consul_init_dir }}
  become: no
  run_once: yes

- name: Copy consul config file
  template:
    src={{ item.src }}
    dest={{ item.dest }}
    owner=consul
    group=consul
    mode={{ item.mode }}
  with_items:
    - { src: "consul.json.j2", dest: "{{ consul_config_file }}", mode: "0600" }
    - { src: "consul.systemd.j2", dest: "/etc/systemd/system/consul.service", mode: "0644" }
  notify:
    - Start consul service
    - Wait for consul leader election

- name: Set consul env variables
  template:
    src=templates/consul.sh.j2
    dest=/etc/profile.d/consul.sh
    owner=consul
    group=consul

- meta: flush_handlers

- name: Setup ACLs
  import_tasks: acl.yml

- meta: flush_handlers
