---

- name: Bootstrap ACL system
  uri:
    url: http://127.0.0.1:8500/v1/acl/bootstrap
    method: PUT
    status_code: 200, 403, 500
  register: root_token_response
  no_log: not debug | default(true)
  until: root_token_response.status == 200 or root_token_response.status == 403
  changed_when: root_token_response.status == 200
  retries: 10
  run_once: true

- name: Set consul_root_token fact
  set_fact:
    consul_root_token: "{{ root_token_response.json.SecretID }}"
  no_log: not debug | default(true)
  run_once: yes
  when: root_token_response.status == 200 and root_token_response.json

- name: Save consul_init locally
  local_action:
    template
      src=consul_init.json.j2
      dest={{ consul_init_dir }}
  become: no
  run_once: yes

- name: Create agent ACL policy
  consul_acl_policy:
    name: agent_acl
    rules: "node_prefix \"\" { policy = \"write\" } service_prefix \"\" { policy = \"read\" }"
    token: "{{ consul_root_token }}"
  run_once: yes

- name: Create agent ACL token
  consul_acl_token:
    secret_id: "{{ consul_agent_token | default(omit) }}"
    policies:
      - Name: agent_acl
    token: "{{ consul_root_token }}"
  register: agent_token_response
  run_once: yes

- name: Set consul_agent_token fact
  set_fact:
    consul_agent_token: "{{ agent_token_response.token.SecretID }}"
  no_log: not debug | default(true)
  run_once: yes
  when: consul_agent_token is undefined

- name: Save consul_init locally
  local_action:
    template
      src=consul_init.json.j2
      dest={{ consul_init_dir }}
  become: no
  run_once: yes

- name: Copy consul config file
  template:
    src=consul.json.j2
    dest={{ consul_config_file }}
    owner=consul
    group=consul
    mode=0600
  notify:
    - Start consul service
    - Wait for consul leader election

- name: Create anonymous ACL policy
  consul_acl_policy:
    name: anonymous_acl
    rules: "node_prefix \"\" { policy = \"read\" } service_prefix \"\" { policy = \"read\" }"
    token: "{{ consul_root_token }}"
  run_once: yes

- name: Update anonymous ACL token
  consul_acl_token:
    secret_id: anonymous
    policies:
      - Name: anonymous_acl
    token: "{{ consul_root_token }}"
  run_once: yes