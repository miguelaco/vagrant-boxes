---

- block:
  - name: Lookup vault init data
    set_fact:
      vault_init_data: "{{ lookup('file', 'vault_init_data') }}"
    no_log: not debug | default(true)
    when: vault_init_data is not defined or vault_init_data.root_token is not defined

  - name: Set http schema
    set_fact:
      schema: "{{ vault_tls_enabled | default(false) | ternary('https', 'http') }}"

  - block:
    # curl -XPOST -H "X-Vault-Token: fc6620f7-41a8-cdbb-030e-6a9deb70d819" https://vault.service.consul:8200/v1/pki/roles/consul -d '{"allowed_domains": ["consul"], "allow_subdomains": true}'
    - name: Create consul role
      uri:
        url: "{{ schema }}://vault.service.consul:8200/v1/pki/roles/consul"
        method: POST
        status_code: 200, 204
        headers:
          X-Vault-Token: "{{ vault_init_data.root_token }}"
        body_format: json
        body:
          allowed_domains:
            - consul
          allow_subdomains: true
      run_once: true

    # curl -XPOST -H "X-Vault-Token: fc6620f7-41a8-cdbb-030e-6a9deb70d819" https://vault.service.consul:8200/v1/pki/issue/consul -d '{"common_name": "vault.service.consul", "alt_names": "active.vault.service.consul, standby.vault.service.consul, *.node.consul"}'
    - name: Create consul cert
      uri:
        url: "{{ schema }}://vault.service.consul:8200/v1/pki/issue/consul"
        method: POST
        status_code: 200, 204
        headers:
          X-Vault-Token: "{{ vault_init_data.root_token }}"
        body_format: json
        body:
          common_name: consul.service.consul
          alt_names: "*.node.consul, *.node.dc1.consul, server.dc1.consul"
      register: cert
      no_log: not debug | default(true)
      run_once: true

    - name: Create consul secrets directory
      file:
        path: "{{ item }}"
        state: directory
        owner: consul
        group: consul
        mode: 0700
      with_items:
        - "{{ consul_home }}"
        - "{{ consul_home }}/secrets"

    - name: Copy consul cert
      copy:
        content: "{{ item.content }}"
        dest: "{{ item.dest }}"
        owner: consul
        group: consul
      no_log: not debug | default(true)
      with_items:
        - { dest: "{{ consul_home }}/secrets/ca.crt", content: "{{ cert.json.data.ca_chain | last }}" }
        - { dest: "{{ consul_home }}/secrets/server.cert.pem", content: "{{ ([cert.json.data.certificate] + cert.json.data.ca_chain) | join('\n') }}" }
        - { dest: "{{ consul_home }}/secrets/server.key.pem", content: "{{ cert.json.data.private_key }}" }
        - { dest: "/etc/pki/ca-trust/source/anchors/ca.crt", content: "{{ cert.json.data.ca_chain | last }}" }
      notify:
        - Start consul service
        - Update CA certificates

    - name: Copy TLS consul config file
      template:
        src=consul_tls.json.j2
        dest={{ consul_config_dir }}/tls.json
        owner=consul
        group=consul
        mode=0600
      notify:
        - Start consul service

    - name: Set consul_tls_enabled flag
      set_fact:
        consul_tls_enabled: true

    when: not consul_tls_enabled | default(false) or consul_renew_secrets | default(false)

  - block:
    # curl -XPOST -H "X-Vault-Token: fc6620f7-41a8-cdbb-030e-6a9deb70d819" https://vault.service.consul:8200/v1/pki/roles/consul -d '{"allowed_domains": ["consul"], "allow_subdomains": true}'
    - name: Create vault role
      uri:
        url: "{{ schema }}://vault.service.consul:8200/v1/pki/roles/vault"
        method: POST
        status_code: 200, 204
        headers:
          X-Vault-Token: "{{ vault_init_data.root_token }}"
        body_format: json
        body:
          allowed_domains:
            - consul
          allow_subdomains: true
      run_once: true

    # curl -XPOST -H "X-Vault-Token: fc6620f7-41a8-cdbb-030e-6a9deb70d819" https://vault.service.consul:8200/v1/pki/issue/consul -d '{"common_name": "vault.service.consul", "alt_names": "active.vault.service.consul, standby.vault.service.consul, *.node.consul"}'
    - name: Create vault cert
      uri:
        url: "{{ schema }}://vault.service.consul:8200/v1/pki/issue/vault"
        method: POST
        status_code: 200, 204
        headers:
          X-Vault-Token: "{{ vault_init_data.root_token }}"
        body_format: json
        body:
          common_name: vault.service.consul
          alt_names: "active.vault.service.consul, standby.vault.service.consul, *.node.consul, *.node.dc1.consul"
      register: cert
      no_log: not debug | default(true)
      run_once: true

    - name: Create vault secrets directory
      file:
        path: "{{ item }}"
        state: directory
        owner: vault
        group: vault
        mode: 0700
      with_items:
        - "{{ vault_home }}"
        - "{{ vault_home }}/secrets"

    - name: Copy vault cert
      copy:
        content: "{{ item.content }}"
        dest: "{{ item.dest }}"
        owner: vault
        group: vault
      no_log: not debug | default(true)
      with_items:
        - { dest: "{{ vault_home }}/secrets/server.cert.pem", content: "{{ ([cert.json.data.certificate] + cert.json.data.ca_chain) | join('\n') }}" }
        - { dest: "{{ vault_home }}/secrets/server.key.pem", content: "{{ cert.json.data.private_key }}" }
        - { dest: "/etc/pki/ca-trust/source/anchors/ca.crt", content: "{{ cert.json.data.ca_chain | last }}" }
      notify:
        - Start vault service
        - Update CA certificates

    - name: Lookup consul init data
      set_fact:
        consul_init_data: "{{ lookup('file', 'consul_init_data') }}"
      no_log: not debug | default(true)

    - name: Check vault ACL
      uri:
        url: http://{{ ansible_host }}:8500/v1/acl/list
        headers:
          X-Consul-Token: "{{ consul_init_data.ID }}"
      register: acls
      no_log: not debug | default(true)
      run_once: true

    - set_fact:
        acl_vault: "{{ acls.json | selectattr('Name', 'equalto', 'acl_vault_token') | list | first }}"
      no_log: not debug | default(true)
      when: acls.json | selectattr('Name', 'equalto', 'acl_vault_token') | list

    - name: Copy vault config file
      template:
        src={{ item.src }}
        dest={{ item.dest }}
        owner=vault
        group=vault
        mode={{ item.mode }}
      with_items:
        - { src: "vault_tls.hcl.j2", dest: "{{ vault_config_file }}", mode: "0600" }
      notify:
        - Start vault service

    - name: Set vault_tls_enabled flag
      set_fact:
        vault_tls_enabled: true

    when: not vault_tls_enabled | default(false) or vault_renew_secrets | default(false)

- always:
  - meta: flush_handlers

- name: Init vault
  import_tasks: vault_init.yml
  tags: vault_init

