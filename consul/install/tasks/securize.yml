---

- block:
  - name: Lookup vault init data
    set_fact:
      vault_init_data: "{{ lookup('file', 'vault_init_data') }}"
    no_log: yes
    when: vault_init_data is not defined or vault_init_data.root_token is not defined

# curl -XPOST -H "X-Vault-Token: fc6620f7-41a8-cdbb-030e-6a9deb70d819" https://vault.service.consul:8200/v1/pki/roles/consul -d '{"allowed_domains": ["consul"], "allow_subdomains": true}'
  - name: Create consul role
    uri:
      url: http://vault.service.consul:8200/v1/pki/roles/consul
      method: POST
      status_code: 200, 204
      headers:
        X-Vault-Token: "{{ vault_init_data.root_token }}"
      body_format: json
      body:
        allowed_domains:
          - consul
        allow_subdomains: true
    run_once: true

  # curl -XPOST -H "X-Vault-Token: fc6620f7-41a8-cdbb-030e-6a9deb70d819" https://vault.service.consul:8200/v1/pki/issue/consul -d '{"common_name": "vault.service.consul", "alt_names": "active.vault.service.consul, standby.vault.service.consul, *.node.consul"}'
  - name: Create consul cert
    uri:
      url: http://vault.service.consul:8200/v1/pki/issue/consul
      method: POST
      status_code: 200, 204
      headers:
        X-Vault-Token: "{{ vault_init_data.root_token }}"
      body_format: json
      body:
        common_name: consul.service.consul
        alt_names: "*.node.consul, *.node.dc1.consul, server.dc1.consul"
    register: cert
    no_log: yes
    run_once: true

  - name: Create consul secrets directory
    file:
      path: "{{ item }}"
      state: directory
      owner: consul
      group: consul
      mode: 0700
    with_items:
      - "{{ consul_home }}"
      - "{{ consul_home }}/secrets"

  - name: Copy consul cert
    copy:
      content: "{{ item.content }}"
      dest: "{{ item.dest }}"
      owner: consul
      group: consul
    no_log: yes
    with_items:
      - { dest: "{{ consul_home }}/secrets/ca.crt", content: "{{ cert.json.data.ca_chain | last }}" }
      - { dest: "{{ consul_home }}/secrets/server.cert.pem", content: "{{ ([cert.json.data.certificate] + cert.json.data.ca_chain) | join('\n') }}" }
      - { dest: "{{ consul_home }}/secrets/server.key.pem", content: "{{ cert.json.data.private_key }}" }
      - { dest: "/etc/pki/ca-trust/source/anchors/ca.crt", content: "{{ cert.json.data.ca_chain | last }}" }
    notify:
      - Start consul service
      - Update CA certificates

  - name: Copy consul config file
    template:
      src={{ item.src }}
      dest={{ item.dest }}
      owner=consul
      group=consul
      mode={{ item.mode }}
    with_items:
      - { src: "consul_tls.json.j2", dest: "{{ consul_config_file }}", mode: "0600" }
    notify:
      - Start consul service

# curl -XPOST -H "X-Vault-Token: fc6620f7-41a8-cdbb-030e-6a9deb70d819" https://vault.service.consul:8200/v1/pki/roles/consul -d '{"allowed_domains": ["consul"], "allow_subdomains": true}'
  - name: Create vault role
    uri:
      url: http://vault.service.consul:8200/v1/pki/roles/vault
      method: POST
      status_code: 200, 204
      headers:
        X-Vault-Token: "{{ vault_init_data.root_token }}"
      body_format: json
      body:
        allowed_domains:
          - consul
        allow_subdomains: true
    run_once: true

  # curl -XPOST -H "X-Vault-Token: fc6620f7-41a8-cdbb-030e-6a9deb70d819" https://vault.service.consul:8200/v1/pki/issue/consul -d '{"common_name": "vault.service.consul", "alt_names": "active.vault.service.consul, standby.vault.service.consul, *.node.consul"}'
  - name: Create vault cert
    uri:
      url: http://vault.service.consul:8200/v1/pki/issue/vault
      method: POST
      status_code: 200, 204
      headers:
        X-Vault-Token: "{{ vault_init_data.root_token }}"
      body_format: json
      body:
        common_name: vault.service.consul
        alt_names: "active.vault.service.consul, standby.vault.service.consul, *.node.consul, *.node.dc1.consul"
    register: cert
    no_log: yes
    run_once: true

  - name: Create vault secrets directory
    file:
      path: "{{ item }}"
      state: directory
      owner: vault
      group: vault
      mode: 0700
    with_items:
      - "{{ vault_home }}"
      - "{{ vault_home }}/secrets"

  - name: Copy vault cert
    copy:
      content: "{{ item.content }}"
      dest: "{{ item.dest }}"
      owner: consul
      group: consul
    no_log: yes
    with_items:
      - { dest: "{{ vault_home }}/secrets/server.cert.pem", content: "{{ ([cert.json.data.certificate] + cert.json.data.ca_chain) | join('\n') }}" }
      - { dest: "{{ vault_home }}/secrets/server.key.pem", content: "{{ cert.json.data.private_key }}" }
      - { dest: "/etc/pki/ca-trust/source/anchors/ca.crt", content: "{{ cert.json.data.ca_chain | last }}" }
    notify:
      - Start vault service
      - Update CA certificates

  - name: Copy vault config file
    template:
      src={{ item.src }}
      dest={{ item.dest }}
      owner=vault
      group=vault
      mode={{ item.mode }}
    with_items:
      - { src: "vault_tls.hcl.j2", dest: "{{ vault_config_file }}", mode: "0600" }
    notify:
      - Start vault service

- always:
  - meta: flush_handlers

- name: Init vault
  import_tasks: vault_init.yml
  tags: vault_init

