---

- block:
  - name: Create vault group
    group: name=vault system=yes

  - name: Create vault user
    user:
      name=vault
      group=vault
      system=yes

  - name: Create vault directory
    file:
      path: "{{ item }}"
      state: directory
      owner: vault
      group: vault
      mode: 0755
    with_items:
      - "{{ vault_home }}"
      - "{{ vault_home }}/bin"
      - "{{ vault_home }}/conf"

  - name: Check vault package
    local_action:
      stat
        path=install/files/vault_{{vault_version}}_linux_amd64.zip
    become: no
    register: vault_package

  - name: Download vault package locally
    local_action:
      get_url
        url=https://releases.hashicorp.com/vault/{{vault_version}}/vault_{{vault_version}}_linux_amd64.zip
        dest=install/files
        force=no
    become: no
    run_once: yes
    when: not vault_package.stat.exists

  - package: name=unzip state=present

  - name: Copy vault package to hosts
    unarchive:
      src=install/files/vault_{{ vault_version }}_linux_amd64.zip
      dest={{ vault_home }}/bin
    notify:
      - Start vault service

  - name: Check vault certificates
    stat:
      path: "{{ item }}"
    register: vault_certs
    with_items:
      - "{{ vault_home }}/secrets/server.cert.pem"
      - "{{ vault_home }}/secrets/server.key.pem"

  - name: Set vault_tls_enabled flag
    set_fact:
      vault_tls_enabled: "{{ vault_certs.results | rejectattr('stat.exists') | list | length == 0 and not vault_reset_tls }}"

  - name: Copy vault config file
    template:
      src={{ item.src }}
      dest={{ item.dest }}
      owner=vault
      group=vault
      mode={{ item.mode }}
    with_items:
      - { src: "{{ vault_tls_enabled | ternary('vault_tls.hcl.j2', 'vault.hcl.j2') }}", dest: "{{ vault_config_file }}", mode: "0600" }
      - { src: "vault.systemd.j2", dest: "/etc/systemd/system/vault.service", mode: "0644" }
    notify:
      - Start vault service

  - name: Set mlock capabilities for vault
    shell: setcap cap_ipc_lock=+ep {{ vault_home }}/bin/vault

  - name: Set vault env variables
    template:
      src=templates/vault.sh.j2
      dest=/etc/profile.d/vault.sh
      owner=vault
      group=vault

  - name: Vault ACL updated in consul
    uri:
      url: http://{{ ansible_host }}:8500/v1/acl/update
      method: PUT
      headers:
        X-Consul-Token: "{{ consul_acl_master_token }}"
      body_format: json
      body:
        Id: "{{ consul_acl_vault_token }}"
        Name: Vault token
        Type: client
        Rules: "key \"vault/\" { policy = \"write\" } node \"\" { policy = \"write\" } service \"vault\" { policy = \"write\" } agent \"\" { policy = \"write\" } session \"\" { policy = \"write\" }"

    run_once: true

- always:
  - meta: flush_handlers

- name: Init vault
  import_tasks: vault_init.yml
